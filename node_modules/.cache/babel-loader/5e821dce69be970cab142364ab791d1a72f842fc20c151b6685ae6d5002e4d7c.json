{"ast":null,"code":"var _jsxFileName = \"/Users/kevinestrada/code_space/Javascript/react-tutorial/taskify/src/components/SingleTodo.tsx\";\nimport React from 'react';\nimport { AiFillEdit, AiFillDelete } from 'react-icons/ai';\nimport { MdDone } from 'react-icons/md';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleTodo = _ref => {\n  let {\n    todo,\n    todos,\n    setTodos\n  } = _ref;\n  const handleDone = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      isDone: !todo.isDone\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todos__single\",\n    children: [todo.isDone ? /*#__PURE__*/_jsxDEV(\"s\", {\n      className: \"todos__single--text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"todos__single--text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"todos__single--text\",\n      children: todo.todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(AiFillEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(AiFillDelete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon\",\n        onClick: () => handleDone(todo.id),\n        children: /*#__PURE__*/_jsxDEV(MdDone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = SingleTodo;\nexport default SingleTodo;\nvar _c;\n$RefreshReg$(_c, \"SingleTodo\");","map":{"version":3,"names":["React","AiFillEdit","AiFillDelete","MdDone","jsxDEV","_jsxDEV","SingleTodo","_ref","todo","todos","setTodos","handleDone","id","map","isDone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kevinestrada/code_space/Javascript/react-tutorial/taskify/src/components/SingleTodo.tsx"],"sourcesContent":["import React from 'react'\nimport { Todo } from '../model'\nimport {AiFillEdit, AiFillDelete,  } from 'react-icons/ai'\nimport { MdDone } from'react-icons/md'\nimport  './styles.css'\n\ntype Props = {\n  todo: Todo,\n  todos: Todo[],\n  setTodos:React.Dispatch<React.SetStateAction<Todo[]>>;\n}\n\nconst SingleTodo = ({todo, todos, setTodos} : Props) => {\n  \n  const handleDone =(id:number) => {\n    setTodos(todos.map((todo) => \n        todo.id === id ? {...todo, isDone:!todo.isDone } :todo\n      )\n    );\n  };\n  \n  return (\n    <form className='todos__single'>\n      {\n        todo.isDone?(\n          <s className='todos__single--text'></s>\n        ): (\n          <span className=\"todos__single--text\"></span>\n        )\n      }\n      <span className=\"todos__single--text\">\n        {todo.todo}\n      </span>\n      <div>\n        <span className='icon'>\n        <AiFillEdit/>\n        </span>\n        <span className='icon'>\n          <AiFillDelete/>\n        </span>\n        <span className='icon'\n        onClick={() => handleDone(todo.id)}>\n          <MdDone/>\n        </span>\n      </div>\n    </form>\n  )\n}\n\n\nexport default SingleTodo;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAAQC,UAAU,EAAEC,YAAY,QAAU,gBAAgB;AAC1D,SAASC,MAAM,QAAO,gBAAgB;AACtC,OAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQtB,MAAMC,UAAU,GAAGC,IAAA,IAAqC;EAAA,IAApC;IAACC,IAAI;IAAEC,KAAK;IAAEC;EAAgB,CAAC,GAAAH,IAAA;EAEjD,MAAMI,UAAU,GAAGC,EAAS,IAAK;IAC/BF,QAAQ,CAACD,KAAK,CAACI,GAAG,CAAEL,IAAI,IACpBA,IAAI,CAACI,EAAE,KAAKA,EAAE,GAAG;MAAC,GAAGJ,IAAI;MAAEM,MAAM,EAAC,CAACN,IAAI,CAACM;IAAO,CAAC,GAAEN,IACpD,CACF,CAAC;EACH,CAAC;EAED,oBACEH,OAAA;IAAMU,SAAS,EAAC,eAAe;IAAAC,QAAA,GAE3BR,IAAI,CAACM,MAAM,gBACTT,OAAA;MAAGU,SAAS,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEvCf,OAAA;MAAMU,SAAS,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAC7C,eAEHf,OAAA;MAAMU,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAClCR,IAAI,CAACA;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACPf,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAMU,SAAS,EAAC,MAAM;QAAAC,QAAA,eACtBX,OAAA,CAACJ,UAAU;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACPf,OAAA;QAAMU,SAAS,EAAC,MAAM;QAAAC,QAAA,eACpBX,OAAA,CAACH,YAAY;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACPf,OAAA;QAAMU,SAAS,EAAC,MAAM;QACtBM,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAACH,IAAI,CAACI,EAAE,CAAE;QAAAI,QAAA,eACjCX,OAAA,CAACF,MAAM;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAAE,EAAA,GAnCKhB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}