{"ast":null,"code":"var _jsxFileName = \"/Users/kevinestrada/code_space/Javascript/react-tutorial/taskify/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport InputField from './components/InputField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todo, setTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]); // how you create an array from an interface\n\n  const handleAdd = event => {\n    event.preventDefault();\n    if (todo) {\n      setTodos([...todos, {\n        id: Date.now(),\n        todo: todo,\n        isDone: false\n      }]);\n      setTodo(\"\");\n    }\n  };\n  console.log(todo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"heading\",\n      children: \"Taskify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      todo: todo,\n      setTodo: setTodo,\n      handleAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7DKd7CJCdxVY/pQjjQ6xII7vyb4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","InputField","jsxDEV","_jsxDEV","App","_s","todo","setTodo","todos","setTodos","handleAdd","event","preventDefault","id","Date","now","isDone","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kevinestrada/code_space/Javascript/react-tutorial/taskify/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport InputField from './components/InputField';\nimport { Todo } from './model';\n\n\nconst App: React.FC = () => {\n\n  const [todo, setTodo] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Todo[]>([]); // how you create an array from an interface\n\n  const handleAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if(todo){\n      setTodos([...todos, {id: Date.now(), todo:todo, isDone:false}]);\n      setTodo(\"\");\n    }\n  };\n\n  console.log(todo);\n  return ( \n    <div className='App'>\n      <span className=\"heading\">Taskify</span>\n      <InputField todo={todo} setTodo={setTodo} handleAdd={handleAdd}/> \n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;;EAEhD,MAAMU,SAAS,GAAIC,KAAsB,IAAK;IAC5CA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAGN,IAAI,EAAC;MACNG,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAACK,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAET,IAAI,EAACA,IAAI;QAAEU,MAAM,EAAC;MAAK,CAAC,CAAC,CAAC;MAC/DT,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAEDU,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;EACjB,oBACEH,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAMgB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACxCrB,OAAA,CAACF,UAAU;MAACK,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,OAAQ;MAACG,SAAS,EAAEA;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAAAnB,EAAA,CArBKD,GAAa;AAAAqB,EAAA,GAAbrB,GAAa;AAuBnB,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}